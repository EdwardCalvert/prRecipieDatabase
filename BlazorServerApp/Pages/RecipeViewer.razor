@page "/Recipe/{RecipeIDRequest:long}"
@inherits Models.RecipeDataLoader
@if (model == null )
{
    <LoadingElement />
}
else if (!validIdentifier )
{
    <ErrorNotification ErrorMessage="Sorry, the ID you provided was not recognised as valid!"/>
}
else
{
    <h3>@model.RecipeName</h3>
    if (model.DocxFilePath != null)
    {
        <div><a href="@model.DocxFilePath" class="btn btn-primary">Download</a></div>
    }

    <FoodLabel nutritionLabel="@model.DisplayNutritionModel" StyleParameters="font-size: 12px; overflow-wrap: anywhere;
    width: 100px;" ShowTitle="false" />
    <h5>Serves @model.Servings</h5>
    <div class="container-fluid">
        <p>@model.Description</p>
        <div class="IngredientsTitle">
            Ingredients
        </div>

        <div class="IngredientsList">
            <ul>
                @foreach (DisplayIngredientModel ingredient in model.Ingredients)
                {
                    <li><em>@ingredient.Quantity @ingredient.Unit</em> @ingredient.Name</li>
                }
            </ul>
        </div>
        <div class="MethodList">
            <ol>
                @foreach (DisplayMethodModel step in model.Method)
                {
                    <li>@step.MethodText</li>
                }
            </ol>
        </div>
        <div class=""></div>
        <ReviewSection RecipeID="@RecipeID" />
    </div>
    if (model.DocxFilePath != null)
    {
        <div><a href="@model.DocxFilePath" class="btn btn-primary">Download</a></div>
    }

}

@code{
        [Parameter]
        public long RecipeIDRequest { get; set; }

    private bool pageRequested = false;
    private bool validIdentifier;

    private uint RecipeID;


    DisplayRecipeModel model = new DisplayRecipeModel();

    protected override async Task OnInitializedAsync()
    {
        uint Result;
        validIdentifier = uint.TryParse(RecipeIDRequest.ToString(), out Result);
        if (validIdentifier)
        {
            RecipeID = Result;
            List<DisplayRecipeModel> result = await GetRecipe(RecipeID);

            if (!pageRequested)
            {

                await IncrementViews(RecipeID);
                pageRequested = true;
            }

            if (result.Count>0)
            {
                model = result[0];
            }
        }
    }
}
