@page "/"
@inherits Models.RecipeDataLoader
<h3>Here are the top recipies- ordered by popularity!</h3>
<!--Potentially create an input select box here to allow it to be sorted by different criteria. -->

@if (Error != null)
{
    <ErrorNotification ErrorMessage="This is a sample error message. Please visit the support page if you need further help. " />

}
@if (_models == null)
{
    <BlazorServerApp.Shared.LoadingElement />
}
else
{
    //style=" min-width: 18rem; max-width: 30.5%"
<div class="row" >
    @foreach (DisplayRecipeModel model in _models) {
    <div class="col-12 col-lg-6">
        
        <div class="RecipeCard">
            <a href="/Recipe/@model.RecipeID" class="No-Decoration ">
                <div class="card m-3">
                    <div class="card-header No-Decoration ColourBlack">
                        <h1>@model.RecipeName </h1>

                    </div>
                    <div class="card-body No-Decoration ColourBlack">
                        <p>Cooking time: @model.CookingTime minutes </p>

                        <p>Preperation time: @model.PreperationTime mintues</p>

                        <ReviewSummary DisplayReviewModel="@model.Reviews"/>

                        <FoodLabel nutritionLabel="model.DisplayNutritionModel" StyleParameters="font-size: 9px; overflow-wrap: anywhere;" ShowTitle="false" />
                        @if (model.Description != null)
                        {
                            <p>Descritption: @model.ShowShortDescription()</p>
                        }
                    </div>
                </div>
                </a>
        </div>
        
    </div>

    }
</div>
}


@code {

    private List<DisplayRecipeModel> _models;

    protected override async Task OnInitializedAsync()

    {
        List<RecipeDataModel> datas =  await _data.LoadData<RecipeDataModel, dynamic>("SELECT * FROM Recipe ORDER BY PageVisits DESC LIMIT 20", new {  }, _config.GetConnectionString("recipeDatabase"));
        _models = await BuildRecipeTreeFromDataModel(datas);
    }

}
