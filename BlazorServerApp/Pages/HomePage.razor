@page "/"
@inherits Models.RecipeListBase
<h3>Here are the top recipies- ordered by popularity!</h3>

@if (Error != null)
{
    <ErrorNotification ErrorMessage="This is a sample error message. Please visit the support page if you need further help. " />

}
@if (_models == null)
{
    <BlazorServerApp.Shared.LoadingElement />
}
else
{
    //style=" min-width: 18rem; max-width: 30.5%"
<div class="row" >
    @foreach (DisplayRecipeModel model in _models) {
    <div class="col-3">
        
        <div class="RecipeCard">
            <a href="/Recipe" class="No-Decoration ">
                <div class="card m-3">
                    <div class="card-header No-Decoration ColourBlack">
                        <h1>@model.RecipeName </h1>

                    </div>
                    <div class="card-body No-Decoration ColourBlack">
                        @if (model.CookingTime != null)
                        {
                        <p>Cooking time: @model.CookingTime minutes </p>
                        }
                        @if (model.PreperationTime != null)
                        {
                        <p>Preperation time: @model.PreperationTime mintues</p>
                        }
                        <p>Reviews: ⭐⭐⭐⭐⭐</p>
                        @if (model.Description != null)
                        {
                            <p>Descritption: @model.ShowShortDescription()</p>
                        }
                    </div>
                </div>
                </a>
        </div>
        
    </div>

    }
</div>
}


@code {

    private bool isVisible = true;
    private string wordClassModifier = "";
    private List<DisplayRecipeModel> _models;

    protected override Task OnInitializedAsync()

    {
        _models = LoadHomepageRecipies().Result;
        return base.OnInitializedAsync();
    }


    private void OnMouseDown()
    {
        wordClassModifier = "wordblock__word-shrinked";
    }

    private void OnMouseUp()
    {
        isVisible = false;
    }

    private void OnMouseOut()
    {
        wordClassModifier = "";
    }
}
