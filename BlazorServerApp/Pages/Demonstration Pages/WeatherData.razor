@page "/weather"

@inject IHttpClientFactory clientFactory
<h3>Component</h3>


@if( string.IsNullOrWhiteSpace(errorString) == false)
            {
                <div class="h2">@errorString</div>
            }
else if(forecast is null)
            {
                <div class="h4">Loading ...</div>

            }
            else
            {


<table class="table table-striped">
                    <thead class="thead-dark">
                        <tr>
                            <th>Data</th>
                            <th>Weather State</th>
                            <th>Low</th>
                            <th>High</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var w in forecast.consolidated_weather)
                            {
                        <tr>
                            <td>@w.applicable_date</td>
                            <td>@w.weather_state_name</td>
                            <td>@w.min_temp</td>
                            <td>@w.max_temp</td>
                        </tr>
                            }

                        
                    </tbody>
                </table>
            }


@code {
    WeatherForecastModel forecast;
    string errorString;

    protected override async Task OnInitializedAsync()
    {


        var client = clientFactory.CreateClient();

        try
        {
            forecast = await client.GetFromJsonAsync<WeatherForecastModel>("https://www.metaweather.com/api/location/2471217/");
            errorString = null;
        }
        catch(Exception e)
            {
            errorString = $"There was an error getting our forecast: {e.Message}";
            }


    }
}
