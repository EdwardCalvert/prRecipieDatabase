@page "/fileManager"
@using System.IO
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment env


<h3>FileManager</h3>
<h2>Upload files</h2>
<form @onsubmit="OnSubmit">
    <InputFile OnChange="OnInputFileChange" multiple />
    <br /><br />
    <button type="submit">Upload Selected File(s)</button>
</form>
@if (selectedFiles == null || selectedFiles.Count == 0)
{
<p>No files selected</p>
}
else
{
<p>Wow! They are loaded!</p>
}






@if (files.Length == 0)
{
    <p>No files exist</p>
}
else
{
    foreach (string file in files)
    {
        <div class="card m-3" style="min-width: 18rem; max-width: 30.5%">
            <div class="card-header">
                <h1>@File.GetAttributes(file) </h1>

            </div>
            <div class="card-body">
                <p>@file</p>
            </div>
            <div class="card-footer">
                <a href="\#" class="btn btn-primary">Download</a>
                <a href="\#" class="btn btn-primary">View Recipe</a>
                <a href="\#" class="btn btn-danger">Delete</a>
            </div>
        </div>}
}




@code {
    private string[] files;

    protected override Task OnInitializedAsync()
    {
        files = Directory.GetFiles($"{ env.WebRootPath}\\uploads");
        return base.OnInitializedAsync();
    }

    string Message = "No file(s) selected";
    IReadOnlyList<IBrowserFile>
    selectedFiles;

    private void OnInputFileChange(InputFileChangeEventArgs e)
    {
        selectedFiles = e.GetMultipleFiles();
        Message = $"{selectedFiles.Count} file(s) selected";
        this.StateHasChanged();
    }

    private async void OnSubmit()
    {

        foreach (var file in selectedFiles)
        {
            using (Stream stream = file.OpenReadStream(512000000))
            {
                var path = $"{env.WebRootPath}\\uploads\\{file.Name}";
                FileStream fs = File.Create(path);
                await stream.CopyToAsync(fs);
                stream.Close();
            }
        }
        Message = $"{selectedFiles.Count} file(s) uploaded on server";
        this.StateHasChanged();
    }

}
