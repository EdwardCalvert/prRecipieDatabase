@page  "/Recipe/{RecipeIDRequest:long}/Edit"
@inject IRecipeDataLoader dataLoader
<h3>EditRecipe</h3>
@if (recipeModel == null)
{
    <LoadingElement />
}
else if (!validIdentifier)
{
    <ErrorNotification ErrorMessage="Sorry, the ID you provided was not recognised as valid!" />
}
else
{
    <RecipeForm RecipeModel="@recipeModel" mode="RecipeForm.MODES.Edit"/>
}
<ErrorNotification ErrorMessage="An unhandled exception occured." Show="@error"></ErrorNotification>

    @code {
            [Parameter]
            public long RecipeIDRequest { get; set; }

        private bool validIdentifier;
        private uint RecipeID;
        private bool pageRequested = false;
        private Recipe recipeModel = new Recipe();
        private bool error = false;


        protected override async Task OnInitializedAsync()
        {
            try
            {
                uint Result;
                validIdentifier = uint.TryParse(RecipeIDRequest.ToString(), out Result);
                if (validIdentifier)
                {
                    RecipeID = Result;
                     recipeModel = await dataLoader.GetRecipeAndTree(Result);
                    if (!pageRequested)
                    {

                        await dataLoader.IncrementViews(RecipeID);
                        pageRequested = true;
                    }


                }
                error = false;
            }
            catch
            {
                error = true;
            }
        }
    }
