
@using System.Web;
@inject IRecipeDataLoader _dataLoader
@inject NavigationManager navMangaer
    <AuthorizeView>
        <Authorized>
            <b>Hello, @context.User.Identity.Name!</b>
            <a class="btn btn-primary"
               href="/logout?returnUrl=/"
               target="_top">Logout</a>
        </Authorized>
        <NotAuthorized>
            @if (error) { 
            <p class="alert-danger"> Unable to sign you in.</p> <p><a href="/userStuck/passwordReset">Forgot your password?</a></p>
            }
            <input type="text"
                   placeholder="User Name"
                   @bind="@Username" />
            &nbsp;&nbsp;
            <input type="password"
                   placeholder="Password"
                   @bind="@Password" />
            <btn style="margin-left:5px;" class="btn btn-primary" @onclick="@Authenticate">Login</btn>
        </NotAuthorized>
    </AuthorizeView>
<ErrorNotification Show="@error" ErrorMessage="Unable to log you in."> </ErrorNotification>
    @code {
        string Username = "";
        string Password = "";
        bool error = false;

        private string encode(string param)
        {
            return HttpUtility.UrlEncode(param);
        }

        private async Task Authenticate()
        {
            try
            {
                User user = await _dataLoader.GetUserFromDatabase(Username);
                string sha512 = BlazorServerApp.Models.User.CreateSHAHash(Password);
                if (user != null && user.SHA512 == sha512)
                {
                    error = false;
                    navMangaer.NavigateTo($"/Login?paramUsername={@encode(@Username)}&paramPassword={@encode(@Password)}", true);
                }
                else
                {
                    error = true;
                    this.StateHasChanged();
                }
            }
            catch
            {
                error = true;
            }
        }
    }

